#include<iostream>
using namespace std;
int min_cost_path(int **L,int n1, int n2)
{
	int cost[n1+1][n2+1];
	
	cost[0][0]=0;
	for(int b=1;b<=n2;b++)
	{
		cost[0][b] = L[0][b-1] + cost[0][b-1];
	}
	for(int i=1;i<=n1;i++)
	{
		cost[i][0] = L[i-1][0] + cost[i-1][0];
	}
	cout << ":ded\n";
	for(int i=1;i<=n1;i++)
	{
		for(int j=1;j<=n2;j++)
		{
			cout << ":ded\n";
			cost[i][j] = L[i-1][j-1] + min(cost[i-1][j], min(cost[i-1][j-1], cost[i][j-1]));
		}
	}
	return cost[n1][n2];
}
int main()
{
	int n1,n2;
	cin >> n1>>n2;
	int** cost = new int* [n1];
	for(int i=0;i<n1;i++)
	cost[i] = new int[n2];
	for(int i=0;i<n1;i++)
	{
		for(int j=0;j<n2;j++)
		{
			cin >> cost[i][j];
		}
	}
	
	cout << min_cost_path(cost,n1,n2);
}
